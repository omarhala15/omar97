import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
df=pd.read_csv('/content/TSLA.csv',index_col='Date')
df.head()
plt.figure(figsize=(12,6))
plt.plot(df["Close"],color="blue");
plt.ylabel("Stock Price")
plt.title("Tesla Stock Price")
plt.xlabel("Time")
plt.xticks([])
plt.show()
X=df[['High', 'Low', 'Open', 'Volume']]
y=df.Close
X_train, X_valid, y_train, y_valid = train_test_split(X, y, train_size=0.7, test_size=0.3,
                                                      random_state=1)
missing_val_count_by_column = (X_train.isnull().sum())
print(missing_val_count_by_column[missing_val_count_by_column > 0])
from sklearn import linear_model
regr = linear_model.LinearRegression()
regr.fit (np.asanyarray(X_train),np.asanyarray(y_train))
print ('Coefficients: ', regr.coef_)
X1=np.asanyarray(X_valid)
y1=np.asanyarray(y_valid)
y_hat=regr.predict(X1)
print('Variance score: %.2f' % regr.score(X1, y1))
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import mean_squared_error, r2_score
print("Mean absolute error: %.2f" %mean_absolute_error( y1, y_hat))
print("Mean squared error: %.2f" % mean_squared_error(y1, y_hat))
df2=pd.DataFrame({'Actual':y1.flatten(),'Predicted' :y_hat.flatten()})
#plt.figure(figsize=(5,5))
#plt.scatter(X1[:,0],y1)
#plt.plot(X1[:,0],y_hat,'r')
graph=df2.head(25)
graph.plot(kind='bar')
plt.title('Actual vs predicted price')
